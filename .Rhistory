a<- 1:10
a
1:10
1:10
ls.str()
1:100
plot(rnorm(100))
install.packages(c("stats", "graphics", "grDevices", "utils", "datasets", "abind",
"mvtnorm", "plyr", "bayesm", "methods", "base", "reshape"))
install.packages(c("stats", "graphics", "grDevices", "utils",
"mvtnorm", "plyr", "bayesm", "methods", "base", "reshape"))
install.packages(c("stats", "graphics", "grDevices", "utils",
install.packages('tm')
install.packages('tm')
x11()
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
install.packages("rstudioapi")
rstudioapi::isAvailable("0.99.149")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r"); 
mydata <- read.csv("http://www.ats.ucla.edu/stat/data/binary.csv")
head(mydata)
str(mydata)
mydata$rank <- factor(mydata$rank)
mylogit <- glm(admit ~ gre + gpa + rank, data = mydata, family = "binomial")
predictshine(mylogit)
library(shiny)
predictshine(mylogit)
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r"); 
predictshine(mylogit)
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
setwd("//cht-gs1/ClinicalOutcomes$/Tom/R/predictshine")
predictshine(mylogit)
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
predictshine(mylogit)
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
predictshine(mylogit)
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r")
predictshine(mylogit)
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r")
predictshine(mylogit)
methods(get_prediction  )
get_prediction  <- function (model, ...) {
UseMethod("get_prediction")
}
methods(get_prediction )
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r")
predictshine(mylogit)
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r")
predictshine(mylogit)
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r")
predictshine(mylogit)
`source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r")
predictshine(mylogit)
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r")
predictshine(mylogit)
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r")
predictshine(mylogit)
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r")
predictshine(mylogit)
?class
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r")
predictshine(mylogit)
plot.prediction_glm
methods(plot)
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r")
predictshine(mylogit)
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
group <- gl(2, 10, 20, labels = c("Ctl","Trt"))
weight <- c(ctl, trt)
lm.D9 <- lm(weight ~ group)
predcit(lm.D9 )
predict(lm.D9 )
predict(lm.D9 , type = 'prediction')
?predcict.lm
?predict.lm
predict(lm.D9 ,  interval = 'prediction')
predict(lm.D9 ,  interval = 'prediction')[,'fit]
predict(lm.D9 ,  interval = 'prediction')[,'fit']
str(lm.D9)
str(lm.D9$model[[1]])
range(lm.D9$model[[1]])
range(lm.D9$model[[1]]) * c(0.9, 1.1)
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r")
predictshine(lm.D9 )
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r")
predictshine(lm.D9 )
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r")
predictshine(lm.D9 )
predictshine(mylogit)
str(mydata)
mylogit <- glm(admit ~ gre + gpa + rank, data = mydata, family = "binomial")
mylm <- lm(gre ~ admit + gpa + rank, data = mydata)
predictshine(mylm)
mydata$gre <- factor(mydata$gre)
mylogit <- glm(admit ~ gre + gpa + rank, data = mydata, family = "binomial")
mylm <- lm(gre ~ admit + gpa + rank, data = mydata)
mydata$gre
mydata <- read.csv("http://www.ats.ucla.edu/stat/data/binary.csv")
mydata$rank <- factor(mydata$rank)
mydata$admit <- factor(mydata$admit)
mylogit <- glm(admit ~ gre + gpa + rank, data = mydata, family = "binomial")
mylm <- lm(gre ~ admit + gpa + rank, data = mydata)
predictshine(mylogit)
predictshine(mylm)
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r")
predictshine(mylm)
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r")
predictshine(mylm)
mylm$call
mylogit$call
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r")
predictshine(mylogit)
cat(mylm$call)
mylm$call
print(mylm$call)
cat(print(mylm$call))
paste('call:', mylm$call)
mylm$call
str(summary(mylm$call))
summary(mylm$call)
str(summary(mylm))
print.summarylm
str(summary(mylm))
print.summary.lm
str(print(summary(mylm)))
print(mylogit$call)
cat(print(mylogit$call))
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r")
predictshine(mylogit)
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r")
predictshine(mylogit)
predictshine(mylm)
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r")
predictshine(mylogit)
predictshine(mylogit)
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r")
predictshine(mylogit)
survfit
?coxph
library(survival)
?coxph
test1 <- list(time=c(4,3,1,1,2,2,3), 
              status=c(1,1,1,0,1,1,0), 
              x=c(0,2,1,1,1,0,0), 
              sex=c(0,0,0,0,1,1,1)) 
fit = coxph(Surv(time, status) ~ x + strata(sex), test1) 
fit$call
fit = coxph(Surv(time, status) ~ x + sex, test1) 
fit$call
survfit(fit)
survfit(fit,newdata = test1[1,])
test1 <- data.frame(time=c(4,3,1,1,2,2,3), 
              status=c(1,1,1,0,1,1,0), 
              x=c(0,2,1,1,1,0,0), 
              sex=c(0,0,0,0,1,1,1)) 
fit = coxph(Surv(time, status) ~ x + sex, test1) 
survfit(fit,newdata = test1[1,])
test = survfit(fit,newdata = test1[1,])
test
plot(test)test
plot(test)
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/1.functions.r")
source(file="//cht-gs1/clinicaloutcomes$/Tom/R/predictshine/predictshine.r")
fit_cox = coxph(Surv(time, status) ~ x + sex, test1) 
predictshine(fit_cox )
fit_cox$model
str(fit_cox)
?coxph
fit_cox = coxph(Surv(time, status) ~ x + sex, test1, model = TRUE) 
predictshine(fit_cox )
fit_cox = coxph(Surv(time, status) ~ factor(x) + sex, test1, model = TRUE) 
predictshine(fit_cox )
test1 <- data.frame(time=c(4,3,1,1,2,2,3), 
              status=c(1,1,1,0,1,1,0), 
              x=factor(c(0,2,1,1,1,0,0)), 
              sex=c(0,0,0,0,1,1,1)) 
fit_cox = coxph(Surv(time, status) ~ factor(x) + sex, test1, model = TRUE) 
fit_cox = coxph(Surv(time, status) ~ x + sex, test1, model = TRUE) 
predictshine(fit_cox )
predictshine(fit_cox )
q()
