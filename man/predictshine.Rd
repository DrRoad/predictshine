% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/predictshine.r
\name{predictshine}
\alias{predictshine}
\title{Make interactive model predictions with shiny}
\usage{
predictshine(fit, main = NULL, variable_descriptions = NULL, ...)
}
\arguments{
\item{fit}{a model object from either lm, glm or coxph.}

\item{main}{a main title for the app, defaults to the name of \code{fit}}

\item{variable_descriptions}{an optional character vector giving description of each variable in the model. Defaults to \code{NULL}, giving headings based on the variable names only}

\item{...}{optional arguments to be passed to \code{plot()}}
}
\value{
An object that represents the app. Printing the object or passing it to \code{runApp()} will run the app.
}
\description{
Make interactive model predictions with shiny
}
\examples{
# linear regression
# create demo linear model using school dataset

predictshine(mylm, main = 'Linear Model example', variable_descriptions = c('Admission (0 = yes, 1 = no)', 'Grade point average', 'Class rank'))
predictshine(mylm)

# Logistic regression
mylogit <- glm(admit ~ gre + gpa + rank, data = school, family = "binomial")

predictshine(mylogit)

# Survival
library(survival)

# Variables must be set to correct type outside of model call
lung$sex = factor(lung$sex )
lung$ph.ecog = factor(lung$ph.ecog )

# model must be set to TRUE
fit_cox = coxph(Surv(time, status) ~ age + sex + ph.ecog , lung, model = TRUE)

predictshine(fit_cox, xscale = 365 , xlab = 'Time (years)', ylab = 'Overall Survival')
}

